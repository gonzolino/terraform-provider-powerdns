// Code generated by go-swagger; DO NOT EDIT.

package tsigkey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gonzolino/terraform-provider-powerdns/internal/powerdns/models"
)

// PutTSIGKeyReader is a Reader for the PutTSIGKey structure.
type PutTSIGKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTSIGKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutTSIGKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewPutTSIGKeyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutTSIGKeyOK creates a PutTSIGKeyOK with default headers values
func NewPutTSIGKeyOK() *PutTSIGKeyOK {
	return &PutTSIGKeyOK{}
}

/* PutTSIGKeyOK describes a response with status code 200, with default header values.

OK. TSIGKey is changed.
*/
type PutTSIGKeyOK struct {
	Payload *models.TSIGKey
}

func (o *PutTSIGKeyOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{server_id}/tsigkeys/{tsigkey_id}][%d] putTSIGKeyOK  %+v", 200, o.Payload)
}
func (o *PutTSIGKeyOK) GetPayload() *models.TSIGKey {
	return o.Payload
}

func (o *PutTSIGKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TSIGKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTSIGKeyConflict creates a PutTSIGKeyConflict with default headers values
func NewPutTSIGKeyConflict() *PutTSIGKeyConflict {
	return &PutTSIGKeyConflict{}
}

/* PutTSIGKeyConflict describes a response with status code 409, with default header values.

An item with this name already exists
*/
type PutTSIGKeyConflict struct {
	Payload *models.Error
}

func (o *PutTSIGKeyConflict) Error() string {
	return fmt.Sprintf("[PUT /servers/{server_id}/tsigkeys/{tsigkey_id}][%d] putTSIGKeyConflict  %+v", 409, o.Payload)
}
func (o *PutTSIGKeyConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutTSIGKeyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
