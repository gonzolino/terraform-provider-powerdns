// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/gonzolino/terraform-provider-powerdns/internal/powerdns/models"
)

// NewPatchZoneParams creates a new PatchZoneParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchZoneParams() *PatchZoneParams {
	return &PatchZoneParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchZoneParamsWithTimeout creates a new PatchZoneParams object
// with the ability to set a timeout on a request.
func NewPatchZoneParamsWithTimeout(timeout time.Duration) *PatchZoneParams {
	return &PatchZoneParams{
		timeout: timeout,
	}
}

// NewPatchZoneParamsWithContext creates a new PatchZoneParams object
// with the ability to set a context for a request.
func NewPatchZoneParamsWithContext(ctx context.Context) *PatchZoneParams {
	return &PatchZoneParams{
		Context: ctx,
	}
}

// NewPatchZoneParamsWithHTTPClient creates a new PatchZoneParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchZoneParamsWithHTTPClient(client *http.Client) *PatchZoneParams {
	return &PatchZoneParams{
		HTTPClient: client,
	}
}

/* PatchZoneParams contains all the parameters to send to the API endpoint
   for the patch zone operation.

   Typically these are written to a http.Request.
*/
type PatchZoneParams struct {

	/* ServerID.

	   The id of the server to retrieve
	*/
	ServerID string

	// ZoneID.
	ZoneID string

	/* ZoneStruct.

	   The zone struct to patch with
	*/
	ZoneStruct *models.Zone

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch zone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchZoneParams) WithDefaults() *PatchZoneParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch zone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchZoneParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch zone params
func (o *PatchZoneParams) WithTimeout(timeout time.Duration) *PatchZoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch zone params
func (o *PatchZoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch zone params
func (o *PatchZoneParams) WithContext(ctx context.Context) *PatchZoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch zone params
func (o *PatchZoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch zone params
func (o *PatchZoneParams) WithHTTPClient(client *http.Client) *PatchZoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch zone params
func (o *PatchZoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServerID adds the serverID to the patch zone params
func (o *PatchZoneParams) WithServerID(serverID string) *PatchZoneParams {
	o.SetServerID(serverID)
	return o
}

// SetServerID adds the serverId to the patch zone params
func (o *PatchZoneParams) SetServerID(serverID string) {
	o.ServerID = serverID
}

// WithZoneID adds the zoneID to the patch zone params
func (o *PatchZoneParams) WithZoneID(zoneID string) *PatchZoneParams {
	o.SetZoneID(zoneID)
	return o
}

// SetZoneID adds the zoneId to the patch zone params
func (o *PatchZoneParams) SetZoneID(zoneID string) {
	o.ZoneID = zoneID
}

// WithZoneStruct adds the zoneStruct to the patch zone params
func (o *PatchZoneParams) WithZoneStruct(zoneStruct *models.Zone) *PatchZoneParams {
	o.SetZoneStruct(zoneStruct)
	return o
}

// SetZoneStruct adds the zoneStruct to the patch zone params
func (o *PatchZoneParams) SetZoneStruct(zoneStruct *models.Zone) {
	o.ZoneStruct = zoneStruct
}

// WriteToRequest writes these params to a swagger request
func (o *PatchZoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param server_id
	if err := r.SetPathParam("server_id", o.ServerID); err != nil {
		return err
	}

	// path param zone_id
	if err := r.SetPathParam("zone_id", o.ZoneID); err != nil {
		return err
	}
	if o.ZoneStruct != nil {
		if err := r.SetBodyParam(o.ZoneStruct); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
